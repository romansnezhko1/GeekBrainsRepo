импорт  UIKit

/*1.Описать класс Car c общими свойствами автомобилей и пустым методом действия по аналогии с прошлым заданием.
2. Описать пару его наследников trunkCar и sportСar. Подумать, какими отличительными свойствами обладают эти автомобили. Описать в каждом наследнике специфичные для него свойства.
3. Взять из прошлого урока enum с действиями над автомобилем. Подумать, какие особенные действия имеет trunkCar, а какие – sportCar. Добавить эти действия в перечисление.
4. В каждом подклассе переопределить метод действия с автомобилем в соответствии с его классом.
5. Создать несколько объектов каждого класса. Применить к ним различные действия.
6. Вывести значения свойств экземпляров в консоль. */

enum  nitro {
    чехол  nitroOn
    чехол  nitroOff
}
enum  bag {
    чехол  багажникIsFull
    case  TrunkIsEmpty
}
class  Car {
    var brand: String
    выпуск var : Int
    init ( бренд : String , выпуск : Int ) {
        я . марка  = марка
        я . release  = релиз
    }
}
class  trunkCar : Car {
    вар багажник: багаж
    init ( марка : String , выпуск : Int , багажник : багаж) {
        я . ствол  = ствол
        супер . init ( марка : марка, выпуск : выпуск)
    }
    func  trunkState () {
        если ствол == . trunkIsFull {
            print ( " Багажник полон " )
        } else {
            print ( " Багажник пуст " )
        }
    }
}
class  sportCar : Car {
    var goFast: nitro
    init ( бренд : String , выпуск : Int , goFast : nitro) {
        я . goFast  = goFast
        супер . init ( марка : марка, выпуск : выпуск)
    }
    func  nitroState () {
        если goFast == . nitroOn {
            print ( " Спортивная машина едет быстрее " )
        } else {
            print ( " Спортивная машина едет медленее " )
        }
    }
}
пусть газель =  trunkCar ( марка : " Газель " , выпуск : 2005 г. , багажник :. trunkIsFull )
газель. trunkState ()
let mitsubisi =  sportCar ( бренд : " Митсубиши " , выпуск : 2019 , goFast :. nitroOn )
Мицубиси. nitroState ()